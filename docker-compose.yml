
services:
  app:
    container_name: laravel_app  # âœ… Make sure this matches in Nginx config
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "php-fpm", "-t"]
      retries: 5
      interval: 10s

  webserver:
    image: nginx:latest
    container_name: nginx_server
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      app:
        condition: service_healthy
    networks:
      - app_network

  db:
    image: mysql:8
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: webrozy
      MYSQL_USER: rozy
      MYSQL_PASSWORD: admin123
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      retries: 5
      interval: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    container_name: react_app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - webserver
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    environment:
      PMA_HOST: db  # MySQL service name from this file
      PMA_PORT: 3306 # MySQL service port
      PMA_USER: rozy
      PMA_PASSWORD: admin123
    ports:
      - "9999:80" # Access phpMyAdmin on port 9999
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network

volumes:
  db_data:

networks:
  app_network:
    driver: bridge
